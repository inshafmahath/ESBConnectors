<!--
  ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<template name="getVenues" xmlns="http://ws.apache.org/ns/synapse">

    <!-- Required Parameters -->
    <parameter name="key" description="API key"/>


    <!-- At least one of the required parameter must be supplied with the request-->
    <parameter name="event_id" description="To retrieve results based on event id"/>
    <parameter name="group_id" description="To retrieve results based on group id"/>
    <parameter name="group_urlname"
               description="Returns venues with location relative to the group associated with this urlname"/>
    <parameter name="venue_id" description="To retrieve results based on venue id"/>


    <!-- Optional Parameters -->
    <parameter name="fields" description="To retrieve results based on fields"/>

    <sequence>
        <property name="uri.var.key" expression="$func:key"/>
        <property name="uri.var.event_id" expression="$func:event_id"/>
        <property name="uri.var.group_id" expression="$func:group_id"/>
        <property name="uri.var.group_urlname" expression="$func:group_urlname"/>
        <property name="uri.var.venue_id" expression="$func:venue_id"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.query" value=""/>


        <script language="js">
            <![CDATA[

			var event_id = mc.getProperty('uri.var.event_id');
			var group_id = mc.getProperty('uri.var.group_id');
			var group_urlname = mc.getProperty('uri.var.group_urlname');
			var venue_id = mc.getProperty('uri.var.venue_id');
			var fields = mc.getProperty('uri.var.fields');
			var query = mc.getProperty('uri.var.query');

			if (event_id != null && event_id != "") {
			    var encoded_event_id = encodeURIComponent(mc.getProperty('uri.var.event_id'));
				query = query + '&event_id=' + encoded_event_id;
			}

			if (group_id != null && group_id != "") {
			    var encoded_group_id = encodeURIComponent(mc.getProperty('uri.var.group_id'));
				query = query + '&group_id=' + encoded_group_id;
			}

			if(group_urlname !=null && group_urlname != "") {
			    var encoded_group_urlname= encodeURIComponent(mc.getProperty('uri.var.group_urlname'));
				query = query + '&group_urlname=' + encoded_group_urlname;
			}

			if (venue_id != null && venue_id != "") {
			    var encoded_venue_id = encodeURIComponent(mc.getProperty('uri.var.venue_id'));
				query = query + '&venue_id=' + encoded_venue_id;
			}

	        if (fields != null && fields != "") {
			    var encoded_fields = encodeURIComponent(mc.getProperty('uri.var.fields'));
				query = query + '&fields=' + encoded_fields;
			}



			mc.setProperty('uri.var.query', query);

	 		]]>
        </script>


        <filter
                xpath="get-property('uri.var.key') = '' or not(string(get-property('uri.var.key')))">
            <then>
                <property name="uri.var.key" value=""/>
            </then>
        </filter>


        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string" expression="fn:concat('key - ', get-property('uri.var.key'))"/>
        </log>
        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string"
                      expression="fn:concat('query - ', get-property('uri.var.query'))"/>
        </log>
        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string"
                      expression="fn:concat('apiUrl - ', get-property('uri.var.apiUrl'))"/>
        </log>
        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string"
                      expression="fn:concat('apiVersion - ', get-property('uri.var.apiVersion'))"/>
        </log>


        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/venues?key={uri.var.key}{uri.var.query}"/>
            </endpoint>
        </call>


        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
    </sequence>
</template>