<!--
  ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<template name="getConcierge" xmlns="http://ws.apache.org/ns/synapse">

    <!-- Required Parameters -->
    <parameter name="key" description="API key"/>
    <!-- Optional Parameters -->
    <parameter name="category_id"
               description="Comma delimited list of category ids to limit recommendations to."/>
    <parameter name="city" description="To retrieve results based on city"/>
    <parameter name="country" description="To retrieve results based on country"/>
    <parameter name="fields" description="To retrieve results based on fields"/>
    <parameter name="lat" description="To retrieve results based on lat"/>
    <parameter name="lon" description="To retrieve results based on lon"/>
    <parameter name="page_token" description="To retrieve results based on page_token"/>
    <parameter name="radius" description="To retrieve results based on radius"/>
    <parameter name="self_groups" description="To retrieve results based on self_groups"/>
    <parameter name="state" description="To retrieve results based on state"/>
    <parameter name="text_format" description="To retrieve results based on text_format"/>
    <parameter name="time" description="To retrieve results based on time"/>
    <parameter name="topic_id" description="To retrieve results based on topic id"/>
    <parameter name="with_friends" description="To retrieve results based on with_friends"/>
    <parameter name="zip" description="To retrieve results based on zip"/>


    <sequence>
        <property name="uri.var.key" expression="$func:key"/>
        <property name="uri.var.category_id" expression="$func:category_id"/>
        <property name="uri.var.city" expression="$func:city"/>
        <property name="uri.var.country" expression="$func:country"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <property name="uri.var.lat" expression="$func:lat"/>
        <property name="uri.var.lon" expression="$func:lon"/>
        <property name="uri.var.page_token" expression="$func:page_token"/>
        <property name="uri.var.radius" expression="$func:radius"/>
        <property name="uri.var.self_groups" expression="$func:self_groups"/>
        <property name="uri.var.state" expression="$func:state"/>
        <property name="uri.var.text_format" expression="$func:text_format"/>
        <property name="uri.var.time" expression="$func:time"/>
        <property name="uri.var.topic_id" expression="$func:topic_id"/>
        <property name="uri.var.with_friends" expression="$func:with_friends"/>
        <property name="uri.var.zip" expression="$func:zip"/>
        <property name="uri.var.query" value=""/>


        <script language="js">
            <![CDATA[

			var category_id = mc.getProperty('uri.var.category_id');
			var city = mc.getProperty('uri.var.city');
			var country = mc.getProperty('uri.var.country');
			var fields = mc.getProperty('uri.var.fields');
			var lat = mc.getProperty('uri.var.lat');
			var lon = mc.getProperty('uri.var.lon');
			var page_token = mc.getProperty('uri.var.page_token');
			var radius = mc.getProperty('uri.var.radius');
			var self_groups = mc.getProperty('uri.var.self_groups');
			var state = mc.getProperty('uri.var.state');
			var text_format = mc.getProperty('uri.var.text_format');
			var time = mc.getProperty('uri.var.time');
			var topic_id = mc.getProperty('uri.var.topic_id');
			var with_friends = mc.getProperty('uri.var.with_friends');
			var zip = mc.getProperty('uri.var.zip');
			var query = mc.getProperty('uri.var.query');



			if (category_id != null && category_id != "") {
				query = query + '&category_id=' + category_id;
			}

			if(city !=null && city != "") {
				query = query + '&city=' + city;
			}

			if (country != null && country != "") {
				query = query + '&country=' + country;
			}

			if (fields != null && fields != "") {
				query = query + '&fields=' + fields;
			}

			if(lat != null && lat != "") {
				query = query + '&lat=' + lat;
			}

			if (lon != null && lon != "") {
				query = query + '&lon=' + lon;
			}

			if (page_token != null && page_token != "") {
				query = query + '&page_token=' + page_token;
			}

			if (radius != null && radius != "") {
				query = query + '&radius=' + radius;
			}

			if (self_groups != null && self_groups != "") {
				query = query + '&self_groups=' + self_groups;
			}

			if(state !=null && state != "") {
				query = query + '&state=' + state;
			}

			if(text_format != null && text_format != "") {
				query = query + '&text_format=' + text_format;
			}

			if (time != null && time != "") {
				query = query + '&time=' + time;
			}

			if(topic_id != null && topic_id != "") {
				query = query + '&topic_id=' + topic_id;
			}

			if (with_friends != null && with_friends != "") {
				query = query + '&with_friends=' + with_friends;
			}

			if (zip != null && zip != "") {
				query = query + '&zip=' + zip;
			}

			mc.setProperty('uri.var.query', query);

	 		]]>
        </script>

        <filter
                xpath="get-property('uri.var.key') = '' or not(string(get-property('uri.var.key')))">
            <then>
                <property name="uri.var.key" value=""/>
            </then>
        </filter>


        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string" expression="fn:concat('key - ', get-property('uri.var.key'))"/>
        </log>
        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string"
                      expression="fn:concat('query - ', get-property('uri.var.query'))"/>
        </log>


        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/{uri.var.apiVersion}/concierge?key={uri.var.key}{uri.var.query}"
                        />
            </endpoint>
        </call>


        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove"/>
        <header name="X-LI-UUID" scope="transport" action="remove"/>
        <header name="X-Li-Pop" scope="transport" action="remove"/>
        <header name="X-Li-Fabric" scope="transport" action="remove"/>
        <header name="x-li-request-id" scope="transport" action="remove"/>
    </sequence>
</template>