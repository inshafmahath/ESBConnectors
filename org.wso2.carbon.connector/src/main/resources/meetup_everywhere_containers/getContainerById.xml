<template name="getContainerById" xmlns="http://ws.apache.org/ns/synapse">

    <!-- Required Parameters -->
    <parameter name="key" description="API key" />
    <parameter name="container_id" description="To retrieve results based on container id" />

    <!-- Optional Parameters -->
    <parameter name="fields" description="To retrieve results based on fields" />


    <sequence>
        <property name="uri.var.key" expression="$func:key" />
        <property name="uri.var.container_id" expression="$func:container_id" />
        <property name="uri.var.fields" expression="$func:fields" />
        <property name="uri.var.query" value="" />

        <script language="js">
            <![CDATA[

            var fields = mc.getProperty('uri.var.fields');
			var query = mc.getProperty('uri.var.query');



			if (fields != null && fields != "") {
			    var encoded_fields = encodeURIComponent(mc.getProperty('uri.var.fields'));
				query = query + '&fields=' + encoded_fields;
			}


			mc.setProperty('uri.var.query', query);

	 		]]>
        </script>


        <filter
                xpath="get-property('uri.var.key') = '' or not(string(get-property('uri.var.key')))">
            <then>
                <property name="uri.var.key" value="" />
            </then>
        </filter>





        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string" expression="fn:concat('key - ', get-property('uri.var.key'))" />
        </log>
        <log level="custom" xmlns="http://ws.apache.org/ns/synapse">
            <property name="string" expression="fn:concat('query - ', get-property('uri.var.query'))"/>
        </log>



        <call>
            <endpoint>
                <http method="get"
                      uri-template="{uri.var.apiUrl}/ew/container/{uri.var.container_id}?key={uri.var.key}{uri.var.query}" />
            </endpoint>
        </call>


        <!-- Remove response custom header information -->
        <header name="x-li-format" scope="transport" action="remove" />
        <header name="X-LI-UUID" scope="transport" action="remove" />
        <header name="X-Li-Pop" scope="transport" action="remove" />
        <header name="X-Li-Fabric" scope="transport" action="remove" />
        <header name="x-li-request-id" scope="transport" action="remove" />
    </sequence>
</template>